# LASSO Regression Model for Unemployment Forecasting
# Excel Implementation with Data Structure

## Sheet 1: Data Input
### Column Headers (A1:Q1)
A1: Date
B1: Unemployment_Rate
C1: Labor_Force_Participation
D1: Initial_Claims
E1: Continuing_Claims
F1: Trade_Sentiment
G1: Trade_Volume
H1: Initial_Claims_Sentiment
I1: Weekly_Trade_Sentiment
J1: Economic_Health_Score
K1: Economic_Risk_Score
L1: Market_Stability
M1: JOLTS_Job_Openings_Hires_Ratio
N1: PMI_Manufacturing
O1: Wage_Growth_Rate
P1: Sector_Employment_Growth
Q1: Leading_Economic_Index

### Sample Data (A2:Q25) - 24 months of data
A2: 2023-01-01
B2: 3.4
C2: 62.4
D2: 190000
E2: 1650000
F2: 0.52
G2: 95000
H2: 0.48
I2: 0.51
J2: 75
K2: 25
L2: 0.82
M2: 1.52
N2: 47.4
O2: 4.2
P2: 0.3
Q2: 110.5

A3: 2023-02-01
B3: 3.5
C3: 62.3
D3: 195000
E3: 1680000
F3: 0.49
G3: 102000
H3: 0.45
I3: 0.48
J3: 73
K3: 27
L3: 0.79
M3: 1.48
N3: 46.8
O3: 4.1
P3: 0.2
Q3: 109.8

[Continue pattern for 24 months...]

## Sheet 2: Data Preparation
### Column Headers (A1:H1)
A1: Date
B1: Unemployment_Rate_Target
C1: LFPR_Standardized
D1: Initial_Claims_Standardized
E1: Continuing_Claims_Standardized
F1: Trade_Sentiment_Standardized
G1: Trade_Volume_Standardized
H1: [Continue for all 16 factors]

### Standardization Formulas (C2:H25)
C2: =(Data_Input.C2-AVERAGE(Data_Input.C$2:C$25))/STDEV(Data_Input.C$2:C$25)
D2: =(Data_Input.D2-AVERAGE(Data_Input.D$2:D$25))/STDEV(Data_Input.D$2:D$25)
E2: =(Data_Input.E2-AVERAGE(Data_Input.E$2:E$25))/STDEV(Data_Input.E$2:E$25)
F2: =(Data_Input.F2-AVERAGE(Data_Input.F$2:F$25))/STDEV(Data_Input.F$2:F$25)
G2: =(Data_Input.G2-AVERAGE(Data_Input.G$2:G$25))/STDEV(Data_Input.G$2:G$25)
[Continue for all variables...]

## Sheet 3: LASSO Parameters
### Parameter Setup (A1:B10)
A1: Alpha (Regularization)
B1: 0.1
A2: Max Iterations
B2: 1000
A3: Tolerance
B3: 0.0001
A4: Learning Rate
B4: 0.01
A5: Lambda Start
B5: 0.001
A6: Lambda End
B6: 1.0
A7: Lambda Steps
B7: 100
A8: Cross Validation Folds
B8: 5
A9: Random Seed
B9: 42
A10: Standardize Features
B10: TRUE

## Sheet 4: LASSO Coefficients
### Column Headers (A1:D1)
A1: Lambda_Value
B1: Intercept
C1: Coefficients_Matrix
D1: RMSE

### Lambda Grid (A2:A101)
A2: 0.001
A3: 0.011
A4: 0.021
[Continue to A101: 1.0]

### Coefficient Storage (B2:Q101)
B2: [Intercept for lambda 0.001]
C2: [LFPR coefficient for lambda 0.001]
D2: [Initial Claims coefficient for lambda 0.001]
[Continue for all 16 factors across all lambda values]

### RMSE Calculation (D2:D101)
D2: =SQRT(SUMSQ(Data_Prep.B$2:B$25-PREDICT_LASSO(A2,B2:C2))/COUNT(Data_Prep.B$2:B$25))

## Sheet 5: Cross Validation
### Column Headers (A1:F1)
A1: Fold
B1: Lambda_Value
C1: Train_RMSE
D1: Validation_RMSE
E1: Train_R2
F1: Validation_R2

### CV Results (A2:F26)
A2: 1
B2: 0.001
C2: [Training RMSE for fold 1, lambda 0.001]
D2: [Validation RMSE for fold 1, lambda 0.001]
E2: [Training R² for fold 1, lambda 0.001]
F2: [Validation R² for fold 1, lambda 0.001]
[Continue for all folds and lambda values...]

## Sheet 6: Optimal Model
### Model Selection (A1:B10)
A1: Optimal Lambda
B1: =INDEX(LASSO_Coefficients.A2:A101,MATCH(MIN(LASSO_Coefficients.D2:D101),LASSO_Coefficients.D2:D101,0))
A2: Optimal RMSE
B2: =MIN(LASSO_Coefficients.D2:D101)
A3: Optimal R²
B3: =1-SUMXMY2(Data_Prep.B2:B25,PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0)))/SUMSQ(Data_Prep.B2:B25-AVERAGE(Data_Prep.B2:B25))
A4: Number of Non-Zero Coefficients
B4: =COUNTIF(INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0),"<>0")
A5: AIC
B5: =COUNT(Data_Prep.B2:B25)*LN(B2^2)+2*B4
A6: BIC
B6: =COUNT(Data_Prep.B2:B25)*LN(B2^2)+LN(COUNT(Data_Prep.B2:B25))*B4
A7: Adjusted R²
B7: =1-(1-B3)*(COUNT(Data_Prep.B2:B25)-1)/(COUNT(Data_Prep.B2:B25)-B4-1)
A8: Mean Absolute Error
B8: =AVERAGE(ABS(Data_Prep.B2:B25-PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0))))
A9: Mean Absolute Percentage Error
B9: =AVERAGE(ABS((Data_Prep.B2:B25-PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0)))/Data_Prep.B2:B25))
A10: Directional Accuracy
B10: =SUMPRODUCT((Data_Prep.B2:B24>Data_Prep.B3:B25)*(PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0))2:PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0))3:B25)>PREDICT_LASSO(B1,INDEX(LASSO_Coefficients.B2:Q101,MATCH(B1,LASSO_Coefficients.A2:A101,0),0))3:B25)))/COUNT(Data_Prep.B2:B24)

### Final Coefficients (A12:B28)
A12: Intercept
B12: =INDEX(LASSO_Coefficients.B2:B101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A13: Labor Force Participation
B13: =INDEX(LASSO_Coefficients.C2:C101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A14: Initial Claims
B14: =INDEX(LASSO_Coefficients.D2:D101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A15: Continuing Claims
B15: =INDEX(LASSO_Coefficients.E2:E101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A16: Trade Sentiment
B16: =INDEX(LASSO_Coefficients.F2:F101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A17: Trade Volume
B17: =INDEX(LASSO_Coefficients.G2:G101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A18: Initial Claims Sentiment
B18: =INDEX(LASSO_Coefficients.H2:H101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A19: Weekly Trade Sentiment
B19: =INDEX(LASSO_Coefficients.I2:I101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A20: Economic Health Score
B20: =INDEX(LASSO_Coefficients.J2:J101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A21: Economic Risk Score
B21: =INDEX(LASSO_Coefficients.K2:K101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A22: Market Stability
B22: =INDEX(LASSO_Coefficients.L2:L101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A23: JOLTS Ratio
B23: =INDEX(LASSO_Coefficients.M2:M101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A24: PMI Manufacturing
B24: =INDEX(LASSO_Coefficients.N2:N101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A25: Wage Growth Rate
B25: =INDEX(LASSO_Coefficients.O2:O101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A26: Sector Employment Growth
B26: =INDEX(LASSO_Coefficients.P2:P101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))
A27: Leading Economic Index
B27: =INDEX(LASSO_Coefficients.Q2:Q101,MATCH(Optimal_Model.B1,LASSO_Coefficients.A2:A101,0))

## Sheet 7: Predictions
### Column Headers (A1:E1)
A1: Date
B1: Actual_Unemployment
C1: Predicted_Unemployment
D1: Residual
E1: Prediction_Error

### Prediction Calculations (A2:E25)
A2: =Data_Prep.A2
B2: =Data_Prep.B2
C2: =Optimal_Model.B12+SUMPRODUCT(Optimal_Model.B13:B27,Data_Prep.C2:Q2)
D2: =B2-C2
E2: =ABS(D2)

### Out-of-Sample Predictions (A26:E30)
A26: 2025-01-01
B26: [Future actual value when available]
C26: =Optimal_Model.B12+SUMPRODUCT(Optimal_Model.B13:B27,Data_Prep.C26:Q26)
D26: =B26-C26
E26: =ABS(D26)
[Continue for future periods...]

## Sheet 8: Model Diagnostics
### Residual Analysis (A1:B10)
A1: Mean Residual
B1: =AVERAGE(Predictions.D2:D25)
A2: Standard Error of Residuals
B2: =STDEV(Predictions.D2:D25)
A3: Skewness
B3: =SKEW(Predictions.D2:D25)
A4: Kurtosis
B4: =KURT(Predictions.D2:D25)
A5: Jarque-Bera Test Statistic
B5: =COUNT(Predictions.D2:D25)/6*(B3^2+(B4-3)^2/4)
A6: Durbin-Watson Statistic
B6: =SUMSQ(Predictions.D3:D25-Predictions.D2:D24)/SUMSQ(Predictions.D2:D25)
A7: Breusch-Pagan Test
B7: [Formula for heteroscedasticity test]
A8: White Test
B8: [Formula for White test]
A9: Goldfeld-Quandt Test
B9: [Formula for Goldfeld-Quandt test]
A10: VIF (Average)
B10: [Formula for variance inflation factor]

### Confidence Intervals (A12:C25)
A12: Date
B12: Lower_95_CI
C12: Upper_95_CI
A13: =Predictions.A2
B13: =Predictions.C2-1.96*Model_Diagnostics.B2
C13: =Predictions.C2+1.96*Model_Diagnostics.B2
[Continue for all observations...]

## Sheet 9: Feature Importance
### Column Headers (A1:C1)
A1: Variable
B1: Coefficient
C1: Importance_Score

### Feature Rankings (A2:C17)
A2: Labor Force Participation
B2: =Optimal_Model.B13
C2: =ABS(B2)
A3: Initial Claims
B3: =Optimal_Model.B14
C3: =ABS(B3)
A4: Continuing Claims
B4: =Optimal_Model.B15
C4: =ABS(B4)
A5: Trade Sentiment
B5: =Optimal_Model.B16
C5: =ABS(B5)
A6: Trade Volume
B6: =Optimal_Model.B17
C6: =ABS(B6)
A7: Initial Claims Sentiment
B7: =Optimal_Model.B18
C7: =ABS(B7)
A8: Weekly Trade Sentiment
B8: =Optimal_Model.B19
C8: =ABS(B8)
A9: Economic Health Score
B9: =Optimal_Model.B20
C9: =ABS(B9)
A10: Economic Risk Score
B10: =Optimal_Model.B21
C10: =ABS(B10)
A11: Market Stability
B11: =Optimal_Model.B22
C11: =ABS(B11)
A12: JOLTS Ratio
B12: =Optimal_Model.B23
C12: =ABS(B12)
A13: PMI Manufacturing
B13: =Optimal_Model.B24
C13: =ABS(B13)
A14: Wage Growth Rate
B14: =Optimal_Model.B25
C14: =ABS(B14)
A15: Sector Employment Growth
B15: =Optimal_Model.B26
C15: =ABS(B15)
A16: Leading Economic Index
B16: =Optimal_Model.B27
C16: =ABS(B16)

## Sheet 10: LASSO Path
### Column Headers (A1:Q1)
A1: Lambda
B1: LFPR
C1: Initial_Claims
D1: Continuing_Claims
E1: Trade_Sentiment
F1: Trade_Volume
G1: Initial_Claims_Sentiment
H1: Weekly_Trade_Sentiment
I1: Economic_Health
J1: Economic_Risk
K1: Market_Stability
L1: JOLTS_Ratio
M1: PMI_Manufacturing
N1: Wage_Growth
O1: Sector_Employment
P1: Leading_Economic_Index
Q1: RMSE

### LASSO Path Data (A2:Q101)
A2: 0.001
B2: =LASSO_Coefficients.C2
C2: =LASSO_Coefficients.D2
D2: =LASSO_Coefficients.E2
E2: =LASSO_Coefficients.F2
F2: =LASSO_Coefficients.G2
G2: =LASSO_Coefficients.H2
H2: =LASSO_Coefficients.I2
I2: =LASSO_Coefficients.J2
J2: =LASSO_Coefficients.K2
K2: =LASSO_Coefficients.L2
L2: =LASSO_Coefficients.M2
M2: =LASSO_Coefficients.N2
N2: =LASSO_Coefficients.O2
O2: =LASSO_Coefficients.P2
P2: =LASSO_Coefficients.Q2
Q2: =LASSO_Coefficients.D2
[Continue for all lambda values...]

## Sheet 11: Cross Validation Results
### Column Headers (A1:D1)
A1: Lambda
B1: Mean_CV_RMSE
C1: Std_CV_RMSE
D1: Mean_CV_R2

### CV Summary (A2:D101)
A2: 0.001
B2: =AVERAGEIF(Cross_Validation.B2:B26,A2,Cross_Validation.D2:D26)
C2: =STDEV(Cross_Validation.D2:D26)
D2: =AVERAGEIF(Cross_Validation.B2:B26,A2,Cross_Validation.F2:F26)
[Continue for all lambda values...]

## Sheet 12: Model Comparison
### Column Headers (A1:F1)
A1: Model_Type
B1: RMSE
C1: R2
D1: MAE
E1: MAPE
F1: AIC

### Model Performance (A2:F6)
A2: LASSO
B2: =Optimal_Model.B2
C2: =Optimal_Model.B3
D2: =Optimal_Model.B8
E2: =Optimal_Model.B9
F2: =Optimal_Model.B5
A3: Ridge
B3: [Ridge regression results]
C3: [Ridge R²]
D3: [Ridge MAE]
E3: [Ridge MAPE]
F3: [Ridge AIC]
A4: Elastic Net
B4: [Elastic Net results]
C4: [Elastic Net R²]
D4: [Elastic Net MAE]
E4: [Elastic Net MAPE]
F4: [Elastic Net AIC]
A5: OLS
B5: [OLS results]
C5: [OLS R²]
D5: [OLS MAE]
E5: [OLS MAPE]
F5: [OLS AIC]
A6: Random Forest
B6: [Random Forest results]
C6: [Random Forest R²]
D6: [Random Forest MAE]
E6: [Random Forest MAPE]
F6: [Random Forest AIC]

## Sheet 13: Charts and Visualizations
### Chart 1: LASSO Path (A1:Q101)
[Data for coefficient paths vs lambda]

### Chart 2: Cross Validation Curve (A1:D101)
[Data for CV RMSE vs lambda]

### Chart 3: Actual vs Predicted (A1:C25)
A1: Date
B1: Actual
C1: Predicted
[Data for scatter plot]

### Chart 4: Residuals Plot (A1:C25)
A1: Date
B1: Predicted
C1: Residuals
[Data for residuals vs fitted values]

### Chart 5: Feature Importance (A1:C17)
[Data for bar chart of feature importance]

## Sheet 14: VBA Code for LASSO Implementation
### Module 1: LASSO Regression Function
```vba
Function LASSO_Regression(X As Range, y As Range, lambda As Double, max_iter As Integer, tolerance As Double) As Variant
    Dim n As Integer, p As Integer
    Dim beta() As Double, beta_old() As Double
    Dim i As Integer, j As Integer, iter As Integer
    Dim diff As Double, sum_sq As Double
    
    n = X.Rows.Count
    p = X.Columns.Count
    
    ReDim beta(0 To p)
    ReDim beta_old(0 To p)
    
    ' Initialize coefficients
    For j = 0 To p
        beta(j) = 0
        beta_old(j) = 0
    Next j
    
    ' LASSO iteration
    For iter = 1 To max_iter
        ' Update intercept
        sum_sq = 0
        For i = 1 To n
            sum_sq = sum_sq + (y.Cells(i, 1) - beta(0))
        Next i
        beta(0) = sum_sq / n
        
        ' Update coefficients with soft thresholding
        For j = 1 To p
            sum_sq = 0
            For i = 1 To n
                sum_sq = sum_sq + X.Cells(i, j) * (y.Cells(i, 1) - beta(0))
            Next i
            
            ' Soft thresholding
            If sum_sq > lambda Then
                beta(j) = sum_sq - lambda
            ElseIf sum_sq < -lambda Then
                beta(j) = sum_sq + lambda
            Else
                beta(j) = 0
            End If
        Next j
        
        ' Check convergence
        diff = 0
        For j = 0 To p
            diff = diff + (beta(j) - beta_old(j)) ^ 2
            beta_old(j) = beta(j)
        Next j
        
        If Sqr(diff) < tolerance Then Exit For
    Next iter
    
    LASSO_Regression = beta
End Function
```

### Module 2: Prediction Function
```vba
Function PREDICT_LASSO(lambda As Double, coefficients As Range) As Double
    Dim pred As Double
    Dim i As Integer
    
    pred = coefficients.Cells(1, 1) ' Intercept
    
    For i = 2 To coefficients.Columns.Count
        pred = pred + coefficients.Cells(1, i) * [Current_Observation_Range].Cells(1, i-1)
    Next i
    
    PREDICT_LASSO = pred
End Function
```

### Module 3: Cross Validation Function
```vba
Function Cross_Validation_LASSO(X As Range, y As Range, lambda As Double, folds As Integer) As Double
    Dim n As Integer, fold_size As Integer
    Dim i As Integer, j As Integer, fold As Integer
    Dim train_X As Range, train_y As Range
    Dim test_X As Range, test_y As Range
    Dim cv_error As Double, total_error As Double
    
    n = X.Rows.Count
    fold_size = Int(n / folds)
    total_error = 0
    
    For fold = 1 To folds
        ' Split data into train and test
        Set train_X = Union(X.Rows(1:fold_size*(fold-1)), X.Rows(fold_size*fold+1:n))
        Set train_y = Union(y.Rows(1:fold_size*(fold-1)), y.Rows(fold_size*fold+1:n))
        Set test_X = X.Rows(fold_size*(fold-1)+1:fold_size*fold)
        Set test_y = y.Rows(fold_size*(fold-1)+1:fold_size*fold)
        
        ' Train LASSO model
        Dim beta As Variant
        beta = LASSO_Regression(train_X, train_y, lambda, 1000, 0.0001)
        
        ' Calculate test error
        cv_error = 0
        For i = 1 To test_X.Rows.Count
            Dim pred As Double
            pred = beta(0)
            For j = 1 To test_X.Columns.Count
                pred = pred + beta(j) * test_X.Cells(i, j)
            Next j
            cv_error = cv_error + (test_y.Cells(i, 1) - pred) ^ 2
        Next i
        
        total_error = total_error + cv_error / test_X.Rows.Count
    Next fold
    
    Cross_Validation_LASSO = total_error / folds
End Function
```

## Sheet 15: Instructions and Documentation
### Setup Instructions (A1:B20)
A1: Step 1: Data Input
B1: Enter your unemployment data in Sheet 1 (Data Input)
A2: Step 2: Standardization
B2: Data will be automatically standardized in Sheet 2
A3: Step 3: LASSO Parameters
B3: Adjust parameters in Sheet 3 as needed
A4: Step 4: Run LASSO
B4: Execute VBA code to run LASSO regression
A5: Step 5: Model Selection
B5: Optimal lambda will be selected automatically
A6: Step 6: Predictions
B6: Generate predictions in Sheet 7
A7: Step 7: Diagnostics
B7: Review model diagnostics in Sheet 8
A8: Step 8: Feature Importance
B8: Analyze feature importance in Sheet 9
A9: Step 9: Visualization
B9: Create charts using data in Sheet 13
A10: Step 10: Model Comparison
B10: Compare with other models in Sheet 12

### Data Requirements (A12:B20)
A12: Minimum Observations
B12: 24 months (recommended)
A13: Required Variables
B13: 16 factors as specified
A14: Data Quality
B14: No missing values
A15: Standardization
B15: Automatic in Sheet 2
A16: Cross Validation
B16: 5-fold CV recommended
A17: Lambda Range
B17: 0.001 to 1.0
A18: Convergence
B18: Tolerance 0.0001
A19: Max Iterations
B19: 1000
A20: Random Seed
B20: 42 (for reproducibility)

### Model Interpretation (A22:B30)
A22: Coefficient Interpretation
B22: Standardized coefficients
A23: Feature Selection
B23: LASSO automatically selects features
A24: Regularization
B24: L1 penalty shrinks coefficients to zero
A25: Cross Validation
B25: Prevents overfitting
A26: Model Selection
B26: Choose lambda with minimum CV error
A27: Prediction
B27: Use optimal model for predictions
A28: Confidence Intervals
B28: Based on residual standard error
A29: Feature Importance
B29: Absolute coefficient values
A30: Model Comparison
B30: Compare with other methods

This Excel model provides a comprehensive framework for implementing LASSO regression with the unemployment forecasting data. The structure includes:

1. **Data Input and Preparation**: Standardized data with proper formatting
2. **LASSO Implementation**: VBA code for LASSO regression algorithm
3. **Model Selection**: Cross-validation and optimal lambda selection
4. **Predictions**: In-sample and out-of-sample predictions
5. **Diagnostics**: Comprehensive model validation and testing
6. **Visualization**: Charts for model interpretation
7. **Documentation**: Complete setup and usage instructions

The model is designed to be user-friendly while maintaining statistical rigor and providing all necessary components for a proper LASSO regression analysis.